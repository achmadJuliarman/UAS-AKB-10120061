// Generated by view binder compiler. Do not edit!
package com.uas.notes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.uas.notes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CategoryNotesBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatButton categoryNotesDelete;

  @NonNull
  public final LinearLayout categoryNotesLayout;

  @NonNull
  public final TextView categoryNotesTitle;

  @NonNull
  public final TextView categoryNotesTotal;

  private CategoryNotesBinding(@NonNull LinearLayout rootView,
      @NonNull AppCompatButton categoryNotesDelete, @NonNull LinearLayout categoryNotesLayout,
      @NonNull TextView categoryNotesTitle, @NonNull TextView categoryNotesTotal) {
    this.rootView = rootView;
    this.categoryNotesDelete = categoryNotesDelete;
    this.categoryNotesLayout = categoryNotesLayout;
    this.categoryNotesTitle = categoryNotesTitle;
    this.categoryNotesTotal = categoryNotesTotal;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CategoryNotesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CategoryNotesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.category_notes, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CategoryNotesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.category_notes_delete;
      AppCompatButton categoryNotesDelete = ViewBindings.findChildViewById(rootView, id);
      if (categoryNotesDelete == null) {
        break missingId;
      }

      LinearLayout categoryNotesLayout = (LinearLayout) rootView;

      id = R.id.category_notes_title;
      TextView categoryNotesTitle = ViewBindings.findChildViewById(rootView, id);
      if (categoryNotesTitle == null) {
        break missingId;
      }

      id = R.id.category_notes_total;
      TextView categoryNotesTotal = ViewBindings.findChildViewById(rootView, id);
      if (categoryNotesTotal == null) {
        break missingId;
      }

      return new CategoryNotesBinding((LinearLayout) rootView, categoryNotesDelete,
          categoryNotesLayout, categoryNotesTitle, categoryNotesTotal);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
