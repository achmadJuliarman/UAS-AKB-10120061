// Generated by view binder compiler. Do not edit!
package com.uas.notes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.uas.notes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListNotesBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView noteCreatedAt;

  @NonNull
  public final AppCompatButton noteDelete;

  @NonNull
  public final TextView noteNote;

  @NonNull
  public final TextView noteTitle;

  @NonNull
  public final Button noteUpdate;

  @NonNull
  public final LinearLayout notesLayout;

  private ListNotesBinding(@NonNull LinearLayout rootView, @NonNull TextView noteCreatedAt,
      @NonNull AppCompatButton noteDelete, @NonNull TextView noteNote, @NonNull TextView noteTitle,
      @NonNull Button noteUpdate, @NonNull LinearLayout notesLayout) {
    this.rootView = rootView;
    this.noteCreatedAt = noteCreatedAt;
    this.noteDelete = noteDelete;
    this.noteNote = noteNote;
    this.noteTitle = noteTitle;
    this.noteUpdate = noteUpdate;
    this.notesLayout = notesLayout;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListNotesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListNotesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_notes, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListNotesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.note_created_at;
      TextView noteCreatedAt = ViewBindings.findChildViewById(rootView, id);
      if (noteCreatedAt == null) {
        break missingId;
      }

      id = R.id.note_delete;
      AppCompatButton noteDelete = ViewBindings.findChildViewById(rootView, id);
      if (noteDelete == null) {
        break missingId;
      }

      id = R.id.note_note;
      TextView noteNote = ViewBindings.findChildViewById(rootView, id);
      if (noteNote == null) {
        break missingId;
      }

      id = R.id.note_title;
      TextView noteTitle = ViewBindings.findChildViewById(rootView, id);
      if (noteTitle == null) {
        break missingId;
      }

      id = R.id.note_update;
      Button noteUpdate = ViewBindings.findChildViewById(rootView, id);
      if (noteUpdate == null) {
        break missingId;
      }

      LinearLayout notesLayout = (LinearLayout) rootView;

      return new ListNotesBinding((LinearLayout) rootView, noteCreatedAt, noteDelete, noteNote,
          noteTitle, noteUpdate, notesLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
